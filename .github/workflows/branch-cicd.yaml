# 🏃‍♀️ Continuous Integration and Delivery: Branch Testing
# ======================================================


---

name: 🔁 Branch integration testing


# Driving Event
# -------------
#
# What event starts this workflow: a push to any branch other than main

on:
    push:
        branches:
            -   '**'
            -   '!main'
    workflow_dispatch:

# What to Do
# ----------
#
# Test the software with mvn test

jobs:
    branch-testing:
        name: 🪵 Branch Testing
        runs-on: ubuntu-latest
        if: github.actor != 'pdsen-ci'

        strategy:
            matrix:
                # 👉 For the `harvest` repo, we only need to use JDK 11 for some reason. (In the branch
                # workflow pre-template-rollout-summer-2021, there was no matrix strategy and JDK 11
                # was "specifically specified".)
                java-version: [17, 21]

        steps:
            -
                name: 💳 Checkout
                uses: actions/checkout@v4
                with:
                    lfs: true
                    fetch-depth: 0
                    token: ${{secrets.ADMIN_GITHUB_TOKEN || github.token}}
            -
                name: 💵 Maven Cache
                uses: actions/cache@v4
                with:
                    path: ~/.m2/repository
                    # The "key" used to indicate a set of cached files is the operating system runner
                    # plus "mvn" for Maven-specific builds, plus a hash of the `pom.xml` files, which
                    # should uniquely identify the dependent jars; plus "pds" because we pds-prefix
                    # everything with "pds" in PDS—even when the context is obvious! 😅
                    key: pds-${{runner.os}}-mvn-${{hashFiles('**/pom.xml')}}
                    # To restore a set of files, we only need to match a prefix of the saved key.
                    restore-keys: pds-${{runner.os}}-mvn-
            -
                name: ☕️ Set up OpenJDK
                uses: actions/setup-java@v4
                with:
                    distribution: 'adopt'
                    java-version: ${{matrix.java-version}}
            -
                name: 🩺 Test Software
                run: mvn test

            -
                name: ∫ Integration tests … hold onto your hats, pardners
                run: |
                    git clone --quiet https://github.com/NASA-PDS/registry.git
                    cd registry/docker/certs
                    ./generate-certs.sh
                    cd ..
                    docker compose \
                        --ansi never --profile pds-core-registry --project-name registry \
                        up --detach --quiet-pull
                    cd ../../
                    pwd
                    mvn clean install
                    tar xvzf ./target/harvest-*-bin.tar.gz
                    curl -L https://github.com/NASA-PDS/registry-ref-data/releases/download/Latest/custom-datasets.tar.gz -o custom-datasets.tar.gz
                    tar tvzf custom-datasets.tar.gz
                    harvest-*/bin/harvest -c src/test/resource/harvest-job.xml
                    cd registry/docker
                    docker compose \
                        --ansi never --profile int-registry-batch-loader --project-name registry \
                        run --rm --no-TTY reg-api-integration-test-with-wait


...

# -*- mode: yaml; indent: 4; fill-column: 120; coding: utf-8 -*-
